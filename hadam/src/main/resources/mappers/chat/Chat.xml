<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.example.domain.chat.dao.ChatDAO">
	
	<!-- 자유게시판 목록 출력 -->
	<insert id="insertChatRoom" parameterType="com.example.domain.chat.vo.ChatRoomVO" >
		
	INSERT INTO chat_room (BOARD_ID, CHAT_ROOM_MAX,CHAT_ROOM_LAST_MSG) 
	VALUES(#{boardId},#{chatRoomMax},"아직 메세지가 없습니다.");
		
	</insert>
	
	<insert id="joinChatRoom" parameterType="com.example.domain.chat.vo.ChatRoomVO" >
		
	INSERT INTO chat_room_join (CHAT_ROOM_ID, MEMBER_INDEX) 
	VALUES(#{chatRoomId},#{memberIndex});
		
	</insert>
	
	
	<select id="getChatRoomList" parameterType="com.example.domain.chat.vo.ChatRoomVO" resultType="com.example.domain.chat.vo.ChatRoomVO">
			SELECT crj.chat_room_id,
			       crj.chat_room_name,
			       cr.chat_room_last_msg,
			       cr.chat_room_last_sned_time
			FROM chat_room_join crj
			JOIN chat_room cr ON crj.chat_room_id = cr.chat_room_id
			WHERE crj.MEMBER_INDEX = #{memberIndex};
	</select>
	
	<!-- 스케줄 작성시 최대인원수 저장 -->
	<insert id="chatRoomSave" parameterType="ChatRoomVO">
		INSERT INTO chat_room ( CHAT_ROOM_REGISTE_DATE, CHAT_ROOM_MAX, BOARD_ID)
		VALUES ( current_date, #{chatRoomMax}, #{boardId})
		<selectKey keyProperty="chatRoomId" resultType="int"
			order="AFTER">
			select LAST_INSERT_ID()
		</selectKey>
	</insert>
	
	
	<delete id="deleteChatRoom" parameterType="Integer">
		DELETE FROM chat_room
		where board_id = #{boardId}
	</delete>
	
	<select id="checkChatRoomMax" parameterType="ChatRoomVO" resultType="ChatRoomVO">
		select * 
		from chat_room
		where board_id = #{boardId}
	</select>
	
	<select id="chatRoomJoinCount" parameterType="ChatRoomJoinVO" resultType="ChatRoomJoinVO">
		select count(*)
		from chat_room_join crj
		inner join chat_room cr
		on cr.CHAT_ROOM_ID = crj.CHAT_ROOM_ID 
		inner join board b
		on b.BOARD_ID = cr.BOARD_ID 
		where crj.chat_room_id = #{chatRoomId} and cr.board_id=#{boardId}
	</select>
	
	<!-- board테이블과 조인된 chatRoomJoin 목록 출력 -->
	<select id="getChatRoomJoinList" resultType="ChatRoomJoinVO">
		select cr.*
		from chat_room_join cr
		inner join chat_room c
		on c.CHAT_ROOM_ID = cr.CHAT_ROOM_ID 
		inner join board b
		on b.BOARD_ID = c.BOARD_ID
		inner join schedule_table st
		on st.SCHEDULE_TABLE_ID  = b.SCHEDULE_TABLE_ID
		order by b.BOARD_ID desc
	</select>
	
	<update id="updateChatRoomMax" parameterType="BoardVO">
		UPDATE chat_room 
		SET chat_room_max = #{chatRoomMax}
		WHERE board_id = #{boardId}
	</update>
  <delete id="deleteChatRoomJoin" parameterType="Integer">
		DELETE cr
		FROM chat_room_join cr
		INNER JOIN chat_room c ON cr.CHAT_ROOM_ID = c.CHAT_ROOM_ID 
		INNER JOIN board b ON b.BOARD_ID = c.BOARD_ID 
		WHERE b.board_id = #{boardId};
	</delete>
	
	<!-- chat_room_join 테이블 insert -->
	<insert id="chatRoomJoinSave" parameterType="ChatRoomJoinVO">
		INSERT INTO chat_room_join (CHAT_ROOM_ID, MEMBER_INDEX, CHAT_ROOM_NAME)
		VALUES (#{chatRoomId},#{memberIndex}, #{chatRoomName})
	</insert>
	
	
	<!-- 동행신청에서 수락 눌렀을 때 1 [최성익] -->
    <select id="entryAcceptCheck" parameterType="integer" resultType="ChatRoomVO">
    	SELECT * FROM CHAT_ROOM WHERE BOARD_ID = #{boardId}
    </select>
    <!-- 동행신청에서 수락 눌렀을 때 2 [최성익] -->
    <select id="entryAcceptMaxCheck" resultType="integer">
    	SELECT COUNT(*) FROM CHAT_ROOM_JOIN WHERE CHAT_ROOM_ID = #{chatRoomId}
    </select>
	<!-- 동행신청에서 수락 눌렀을 때 3 [최성익] -->
	<insert id="entryAccept" parameterType="integer">
		INSERT INTO CHAT_ROOM_JOIN (CHAT_ROOM_ID, MEMBER_INDEX, CHAT_ROOM_NAME)
		VALUES(#{chatRoomId}, #{guestMemberIndex}, (SELECT BOARD_TITLE FROM BOARD WHERE BOARD_ID = #{boardId}))
	</insert>
	
		<update id="lastChatLastSendTimeUpdate" parameterType="ChatRoomVO">
		UPDATE chat_room
			SET
			    chat_room_last_msg = #{chatRoomLastMsg},
			    chat_room_last_sned_time = CURRENT_TIMESTAMP
			WHERE chat_room_id = #{chatRoomId};
	</update>
	
	
</mapper>